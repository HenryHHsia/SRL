
import ultralytics
ultralytics.checks()

from ultralytics import YOLO
import numpy

# To do: label crater and shadows (any bad terrain such as sand), 
# train model on dataset, test how good prediction is on different kind of images
# Try model on video, better validation because different scenarios/views/angles
# Validate on videos
# Present objective of project
# Future work: implement on OmniLRS for path planning

# input_image = ''

model = YOLO('yolov8n.pt')

# model = YOLO('/home/lunar5/henry_ws/VSCode/best_model_run13.pt')

results = model.train(data = '/home/lunar5/henry_ws/VSCode/datasets/Lunar Surface Segmentation.v2i.yolov8/data.yaml',
                      epochs = 100, 
                      imgsz = 640)

results = model.val(data = '/home/lunar5/henry_ws/VSCode/datasets/Lunar Surface Segmentation.v2i.yolov8/data.yaml')

# results = model.predict(source = input_image,
#                        save = True)

# results = model.save('best_model.pt')

# results = model.export(format = 'onnx')


